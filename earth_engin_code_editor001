// Initialize the map
Map.setCenter(-71.038445, 42.313432, 18); // Centering the map on New York City with zoom level 18

// Define the two corner points of the rectangle using coordinates (longitude, latitude)
var point1 = ee.Geometry.Point([-71.038445, 42.313432]); // First point
var point2 = ee.Geometry.Point([-71.135000, 42.415000]); // Second point

// Extract coordinates from the points
var coords1 = point1.coordinates();
var coords2 = point2.coordinates();

//   Create a rectangle from the two points
var rectangle = ee.Geometry.Polygon([
  [
    [coords1.get(0), coords1.get(1)], // Bottom left
    [coords2.get(0), coords1.get(1)], // Bottom right
    [coords2.get(0), coords2.get(1)], // Top right
    [coords1.get(0), coords2.get(1)], // Top left
    [coords1.get(0), coords1.get(1)]  // Closing the polygon by going back to bottom left
  ]
]);

// Fetch Sentinel-2 image based on rectangle
var s2 = ee.ImageCollection('COPERNICUS/S2_SR_HARMONIZED')
  .filter(ee.Filter.lt('CLOUDY_PIXEL_PERCENTAGE', 30))
  .filter(ee.Filter.date('2021-01-01', '2021-12-31')) // Adjust date range as needed
  .filterBounds(rectangle);

// Get the median image from the filtered collection (deals with clouds clarity as well)
var composite = s2.median();

// Define visualization layer's colors
var rgbVis = {
  bands: ['B4', 'B3', 'B2'], // Red, Green, Blue bands
  min: 0,
  max: 3000,
};

// Add the satellite image layer as a overlay
Map.addLayer(composite.clip(rectangle), rgbVis, 'Satellite Imagery');

// Add the rectangle to the map
//Map.addLayer(rectangle, {color: 'blue', opacity: 0.5}, 'Rectangle Area'); // Add the rectangle in blue with some transparency

// add markers for the corner points
Map.addLayer(point1, {color: 'red'}, 'Point 1'); // Add Point 1 in red
Map.addLayer(point2, {color: 'green'}, 'Point 2'); // Add Point 2 in green

print("done")
